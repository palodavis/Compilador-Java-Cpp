Terminals unused in grammar

   DOUBLE_LITERAL


Grammar

    0 $accept: program $end

    1 program: declarations

    2 $@1: %empty

    3 declarations: declaration SEMICOLON $@1 declarations
    4             | %empty

    5 declaration: INT_TYPE IDENTIFIER ASSIGN NUMBER_LITERAL
    6            | STRING_TYPE IDENTIFIER ASSIGN STRING_LITERAL
    7            | FLOAT_TYPE IDENTIFIER ASSIGN NUMBER_LITERAL
    8            | DOUBLE_TYPE IDENTIFIER ASSIGN NUMBER_LITERAL
    9            | BOOLEAN_TYPE IDENTIFIER ASSIGN BOOLEAN_LITERAL
   10            | CHAR_TYPE IDENTIFIER ASSIGN STRING_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING_LITERAL (260) 6 10


Nonterminals, with rules where they appear

    on left: 0
    on left: 1, on right: 0
    on left: 2, on right: 3


State 0

    0 $accept: . program $end

    INT_TYPE      shift, and go to state 1
    STRING_TYPE   shift, and go to state 2
    FLOAT_TYPE    shift, and go to state 3
    DOUBLE_TYPE   shift, and go to state 4
    BOOLEAN_TYPE  shift, and go to state 5
    CHAR_TYPE     shift, and go to state 6

    $default  reduce using rule 4 (declarations)



State 1

    5 declaration: INT_TYPE . IDENTIFIER ASSIGN NUMBER_LITERAL



State 2

    6 declaration: STRING_TYPE . IDENTIFIER ASSIGN STRING_LITERAL



State 3

    7 declaration: FLOAT_TYPE . IDENTIFIER ASSIGN NUMBER_LITERAL



State 4

    8 declaration: DOUBLE_TYPE . IDENTIFIER ASSIGN NUMBER_LITERAL



State 5

    9 declaration: BOOLEAN_TYPE . IDENTIFIER ASSIGN BOOLEAN_LITERAL



State 6

   10 declaration: CHAR_TYPE . IDENTIFIER ASSIGN STRING_LITERAL



State 7

    0 $accept: program . $end




    1 program: declarations .

    $default  reduce using rule 1 (program)



    3 declarations: declaration . SEMICOLON $@1 declarations




    5 declaration: INT_TYPE IDENTIFIER . ASSIGN NUMBER_LITERAL




    6 declaration: STRING_TYPE IDENTIFIER . ASSIGN STRING_LITERAL




    7 declaration: FLOAT_TYPE IDENTIFIER . ASSIGN NUMBER_LITERAL




    8 declaration: DOUBLE_TYPE IDENTIFIER . ASSIGN NUMBER_LITERAL




    9 declaration: BOOLEAN_TYPE IDENTIFIER . ASSIGN BOOLEAN_LITERAL




   10 declaration: CHAR_TYPE IDENTIFIER . ASSIGN STRING_LITERAL




    0 $accept: program $end .

    $default  accept



    3 declarations: declaration SEMICOLON . $@1 declarations

    $default  reduce using rule 2 ($@1)




    5 declaration: INT_TYPE IDENTIFIER ASSIGN . NUMBER_LITERAL




    6 declaration: STRING_TYPE IDENTIFIER ASSIGN . STRING_LITERAL




    7 declaration: FLOAT_TYPE IDENTIFIER ASSIGN . NUMBER_LITERAL




    8 declaration: DOUBLE_TYPE IDENTIFIER ASSIGN . NUMBER_LITERAL




    9 declaration: BOOLEAN_TYPE IDENTIFIER ASSIGN . BOOLEAN_LITERAL




   10 declaration: CHAR_TYPE IDENTIFIER ASSIGN . STRING_LITERAL




    3 declarations: declaration SEMICOLON $@1 . declarations

    INT_TYPE      shift, and go to state 1
    STRING_TYPE   shift, and go to state 2
    FLOAT_TYPE    shift, and go to state 3
    DOUBLE_TYPE   shift, and go to state 4
    BOOLEAN_TYPE  shift, and go to state 5
    CHAR_TYPE     shift, and go to state 6

    $default  reduce using rule 4 (declarations)




    5 declaration: INT_TYPE IDENTIFIER ASSIGN NUMBER_LITERAL .

    $default  reduce using rule 5 (declaration)



    6 declaration: STRING_TYPE IDENTIFIER ASSIGN STRING_LITERAL .

    $default  reduce using rule 6 (declaration)



    7 declaration: FLOAT_TYPE IDENTIFIER ASSIGN NUMBER_LITERAL .

    $default  reduce using rule 7 (declaration)



    8 declaration: DOUBLE_TYPE IDENTIFIER ASSIGN NUMBER_LITERAL .

    $default  reduce using rule 8 (declaration)



    9 declaration: BOOLEAN_TYPE IDENTIFIER ASSIGN BOOLEAN_LITERAL .

    $default  reduce using rule 9 (declaration)



   10 declaration: CHAR_TYPE IDENTIFIER ASSIGN STRING_LITERAL .

    $default  reduce using rule 10 (declaration)



    3 declarations: declaration SEMICOLON $@1 declarations .

    $default  reduce using rule 3 (declarations)
